server:
  port: 9601
  tomcat:
    accesslog:
      enabled: true
      encoding: UTF-8
    connection-timeout: 10000
    max-connections: 10000
    threads:
      max: 3000
      min-spare: 100

spring:
  application:
    name: order-service
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test2
    username: saber66
    password: AdminSaber66
    hikari:
      connection-timeout: 10000
      idle-timeout: 10000
      minimum-idle: 3
      maximum-pool-size: 6
      max-lifetime: 10000
      schema: test2

  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  restTemplate:
    connectTimeout: 10000
    readTimeout: 10000
    totalConnection: 7000
    connectionPerRoute: 1000

service:
  baseUrl: "/api/order"
  swagger:
    version: 'version1.0.0-1403/03/27'
    title: 'order service'
    description: 'order service'
  api-gateway:
    host: localhost
    port: 8760
springdoc:
  swagger-ui:
    display-request-duration: true
    display-operation-id: true
    tags-sorter: alpha
    path: /swagger-ui.html

  #    oauth:
  #      app-name: saber-client
  #      client-id: saber-client
  #      realm: saber66
  #      client-secret: 73b6e1da-d0ef-474c-97ae-d1c4438a7535
  #      scopes:
  #        - "openid"
  #        - "read"
  #        - "write"
  #      tags-sorter: alpha
  oAuthFlow:
    authorizationUrl: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/auth
    tokenUrl: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/token
    use-pkce-with-authorization-code-grant: true
  api-docs:
    path: ${service.baseUrl}/v3/api-docs
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    appname: ${spring.application.name}
management:
  health:
    circuitbreakers:
      enabled: true

  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      sla:
        "[http.server.requests]": 10ms, 100ms
      percentiles:
        "[http.server.requests]": 0.5, 0.75, 0.95, 0.98, 0.99, 0.999, 1.0
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      base-path: /actuators/order-service
      exposure:
        include: '*'


#resilience4j properties
resilience4j:
  timelimiter:
    instances:
      inventory:
         timeout-duration:
           seconds: 3
  retry:
    instances:
      inventory:
        max-attempts: 3
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        sliding-window-size: 5
        sliding-window-type: count_based
        permitted-number-of-calls-in-half-open-state: 3
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        wait-duration-in-open-state:
                seconds: 5
        automatic-transition-from-open-to-half-open-enabled: true
