server:
  port: 8760
  netty:
    connection-timeout: 10000
    idle-timeout: 10000
    threads: 3000

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      httpclient:
        pool:
          type: elastic
          max-idle-time: 10000
          max-connections: 5000
          max-life-time: 10000
        connect-timeout: 10000
        response-timeout: 30000
        max-header-size: 875000
      metrics:
        enabled: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product/**
            - Method=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD,TRACE

        - id: product-service-docs
          uri: lb://product-service
          predicates:
            - Path=/api/product/v3/api-docs

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order/**
            - Method=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD,TRACE

        - id: order-service-docs
          uri: lb://order-service
          predicates:
            - Path=/api/order/v3/api-docs

        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=/api/inventory/**
            - Method=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD,TRACE

        - id: inventory-service-docs
          uri: lb://inventory-service
          predicates:
            - Path=/api/inventory/v3/api-docs


  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:7080/auth/realms/saber66
          jwk-set-uri: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/certs

logging:
  level:
    root: info
    org.springframework.cloud.gateway: trace
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: info


service:
  swagger:
    version: 'version1.0.0-1403/03/30'
    title: 'api gateway'
    description: 'api gateway'

springdoc:
  swagger-ui:
    display-request-duration: true
    display-operation-id: true
    tags-sorter: alpha
    path: /swagger-ui.html
    urls:
      - url: http://localhost:${server.port}/api/product/v3/api-docs
        name: 'product service'
      - url: http://localhost:${server.port}/api/order/v3/api-docs
        name: 'order service'
      - url: http://localhost:${server.port}/api/inventory/v3/api-docs
        name: 'inventory service'
    oauth:
      app-name: saber-client
      client-id: saber-client
      realm: saber66
      client-secret: 73b6e1da-d0ef-474c-97ae-d1c4438a7535
      scopes:
        - "openid"
        - "read"
        - "write"
  oAuthFlow:
    authorizationUrl: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/auth
    tokenUrl: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/token
    use-pkce-with-authorization-code-grant: true
  api-docs:
    groups:
      enabled: true
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    appname: ${spring.application.name}

management:
  zipkin:
    tracing:
      connect-timeout: 10000
      encoding: json
      read-timeout: 10000
      endpoint: http://localhost:9411/api/v2/spans
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      sla:
        "[http.server.requests]": 10ms, 100ms
      percentiles:
        "[http.server.requests]": 0.5, 0.75, 0.95, 0.98, 0.99, 0.999, 1.0
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      base-path: /actuators/${spring.application.name}
      exposure:
        include: '*'